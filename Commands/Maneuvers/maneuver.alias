<drac2>
c = character()
com = combat()
a = argparse(&ARGS&)
gvar = load_json(get_gvar("662ecc7f-9b2e-4588-851d-12f199d27d0a"))
using(sup='d93a6249-468d-4bb4-92e0-2f8bb629cf04')
fail = 'fail' in &ARGS&
targets = a.get('t')
coms  = [com.get_combatant(x) for x in targets] if com else []
i = '-i' in &ARGS&
cc = "Superiority Dice"
f_add = ["Damage", "Heal", "Add_Damage"]
mi = a.last('mi')
v = c.cc_exists(cc) or i

for com in coms:
        if not com:
            return err(f"{com} is not a valid target")

base = f'''embed -thumb {image} -color {color}'''

if v:
    m = None
    output = None
    for g in gvar:
        if &ARGS&[0].lower() == g.name.lower():
            m=g
            break

    if m is None or m == "":
        return err("m is not found/supported")

    mod = sup.get_bonus(m)
    dc = 8 + proficiencyBonus + mod if not a.last('dc') else int(a.last('dc'))
    roll_str = sup.get_roll_str(m, cc, mi)

    base += sup.perform(m, coms, roll_str, dc, fail)

    base += f''' -title "{name} uses a {cc} die to {m.name}" '''
    base += f''' -f "{m.name} Effect|{m.description}" '''
    if output != "":
        base += output

    if len(coms)>0 and m.type in f_add:
        f_str = '\n'.join([f"{x.name}: {x.hp_str()}" for x in coms])
        base += f''' -footer "{f_str}" '''

if not c.cc_exists(cc):
    base += f''' -title "{name} has no custom counter {cc}!" '''
elif not c.get_cc(cc):
    base += f''' -title "{name} needs to take a rest to replenish their {cc}!" '''

if not i:
    c.mod_cc(cc, -1)
    base += f''' -f "{cc}|{c.cc_str(cc)} (-1)" '''

return base
</drac2>