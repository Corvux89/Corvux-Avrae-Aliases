<drac2>
com = combat()
ch = character()
a = argparse(&ARGS&)
num = int("&1&") if "&1&" in &ARGS& and "&1&".isdecimal() else 1
b = a.last('b') if a.last('b') else None
mi = a.last('mi')
i = '-i' in &ARGS&

try:
    d_size = str([c.name for c in character().consumables if  'Hit Dice' in c.name][0]).replace('Hit Dice (','').replace(')','')
except:
    return err(f"Hit die doesn't look to be setup. Please run `!level` first or set up the die")

base = f'''embed -thumb {image} -color {color}'''
cc = f"Hit Dice ({d_size})"

if ch.cc_exists(cc):
    if ch.get_cc(cc)<num:
        base += f''' -title "{name} doesn't have enough hit die remaining for this." '''
        base += f''' -f "Hit Die Remaining|{ch.get_cc(cc)}" '''
        return base

    roll_str = f"-{num}{d_size}{f'mi{mi}' if mi else ''} {f'+{b}' if b else ''} [healing]"
    base += f''' -title "{name} uses {num} hit die!" '''

    if com:
        base += f''' -f "{name}|{com.me.damage(roll_str, overheal=False).damage}" '''
        base += f''' -footer "{name}: {com.me.hp_str()}" '''
    else:
        h = vroll(roll_str)
        ch.modify_hp(-h.total, overflow=False)
        base += f''' -f "{name}|**Damage**: {h}" '''
        base += f''' -footer "{name}: {ch.hp_str()}" '''

if not i:
    ch.mod_cc(cc, -num)
    base += f''' -f "{cc}|{ch.cc_str(cc)} (-{num})" '''

return base
</drac2>