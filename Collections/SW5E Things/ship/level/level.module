# Ship level module

ch = character()
gvars = ["37a60afe-968b-4abf-8eec-c7fae1072aa3"]
shipStats = load_json(ch.get_cvar("shipStats","{}"))
dagger = 'â€ '
image = ch.image
color = ch.csettings.color
footer = f"\"{ctx.prefix}ship setup v1.0 | @Corvux\""

ship_size = ch.race.lower()
tier = ch.levels.total_level - 1
bg = ch.background.split("|")

hdNum = {"small": 3, "medium": 5, "large": 7, "huge": 9, "gargantuan": 11, "tiny": 1}
hdSize = {"tiny": "d4", "small": "d6", "medium": "d8", "large": "d10", "huge": "d12", "gargantuan": "d20"}
pdSize = ["d1","d4","d6","d8","d10","d12"]

def ship_level(args):
    if len(ch.background.split("|")) < 3:
        return err("You're not a ship.....")
    a = argparse(args)

    for cl, lvl in ch.levels:
        type = cl

    base = f'''embed -thumb {ch.image} -color {ch.csettings.color} -footer {footer} -title "Level Summary for {ch.name}" '''
    base += f''' -f "Info|Tier {tier} - {ch.race} {type}" '''

    # Setup Shields
    ch.set_temp_hp(bg[0])
    base += f''' -f "Max Shields|{bg[0]}|inline"'''

    # Hull/Shield Dice
    hdMult = 2 if ch.race.lower() in ["huge", "gargantuan"] else 1
    numDie = (tier * hdMult) + hdNum.get(ch.race.lower(),0)
    hd = f"{hdSize.get(ch.race.lower(),0)}"
    hdName = f"Hull Dice ({hd})"

    shipStats['hdName'] = hdName
    if ch.cc_exists(hdName):
        ch.delete_cc(hdName)

    ch.create_cc_nx(hdName, 0, numDie)

    sdName = f"Shield Dice ({hd})"
    shipStats["sdName"] = sdName
    if ch.cc_exists(sdName):
        ch.delete_cc(sdName)

    ch.create_cc_nx(sdName, 0, numDie)

    base += f''' -f "Hull Die|{numDie}{hd}|inline" -f "Shield Die|{numDie}{hd}|inline" '''

    # Power dice
    pdNum = int(bg[4]) + int(bg[5])
    pdName = f"Power Dice ({pdSize[tier]})"
    shipStats['pdName'] = pdName

    if ch.cc_exists(pdName):
        ch.delete_cc(pdName)

    ch.create_cc_nx(pdName, 0, numDie)

    # Ship Equip Indicator
    shipStats['equip'] = 1

    base += f''' -f "Power Die|{pdNum}{pdSize[tier]}|inline" '''

    ch.set_cvar("shipStats", dump_json(shipStats))

    return base

def ship_level_new(args):
    args = [x.lower() for x in args]
    base = f'''embed -thumb {image} -color {color} -footer {footer}'''
    specializationSource = args[0] if args else None
    remover = args.remove(args[0]) if args else None
    err_str = []

    if not help:
        base += f''' -title "Summary for {ch.name}" '''

        # Find information
        shipSize = getSize()
        shipSpec = getSpecialization(specializationSource)

        # Update CVARS

        # Shield/Hit Die
        base += setupHDSD(shipSize)

    return base

def getSize():
    size_list = []

    for g in gvars:
        tiers = load_json(get_gvar(g))

        for s in tiers:
            if not s.get("specialization"):
                if s.Size.lower() == ship_size.lower() and s not in size_list:
                    size_list.append(c)

    if len(size_list) == 0:
        return  err("**No ship setup found.**\n Use `!ship level options` to see your available classes.")

    return size_list

def getSpecialization(str):
    specializations = []
    spec_search = [x for x in str.split(" ")]

    for g in gvars:
        sizes = load_json(get_gvar(g))

        for s in sizes:
            if s.get("specialization") and s.Size.lower() == ship_size.lower() and str and s.get("specialization").lower() in spec_search:
                specializations.append(s)

    return specializations

def setupHDSD(shipSize):

    for size in shipSize:
        if size.get("hitDie"):
            # Hull Die
            hdName = f"Hull Dice ({size.get('hitDie')})"
            hdNum = int(size.get("hullDie"))+tier
            if ch.cc_exists(hdName):
                ch.delete_cc(hdName)

            ch.create_cc_nx(hdName,0, hdNum)
            shipStats['hdName'] = hdName

            # Shield Die
            sdName = f"Shield Dice ({size.get('hitDie')})"
            sdNum = int(size.get("shieldDie"))+tier
            if ch.cc_exists(sdName):
                ch.delete_cc(sdName)

            ch.create_cc_nx(sdName, 0, sdNum)
            shipStats["sdName"] = sdName

    return f''' -f "Hull Die|{hdNum}{size.get('hitDie')}|inline" -f "Shield Die|{sdNum}{size.get('hitDie')}" '''



