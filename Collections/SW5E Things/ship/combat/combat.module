# Ship Combat Start

ch = character()
com = combat()
bg = ch.background.split("|")
shipStats = load_json(ch.get_cvar("shipStats", {}))
hdSize = {"tiny": "d4", "small": "d6", "medium": "d8", "large": "d10", "huge": "d12", "gargantuan": "d20"}
using(ship="85c74b16-b249-499b-b3f7-3f364fefdfb9")


def startCombat(args):
    if not bg[0]:
        return err(f"Something isn't write with your character sheet")
    elif not shipStats.get('hdName'):
        return err(f"Please use `{ctx.prefix}ship level` first to setup your counters.")
    elif not com:
        return err(f"This alias is used to setup combat....you're not in combat.....see the problem?")

    # Shields
    if ch.temp_hp == 0:
        ch.set_temp_hp(bg[0])

    immune = ["poison", "psychic"]

    # Setup Effects
    peff = {"immunities": immune}
    desc = f"Max Shields: {bg[0]}\n - Damage Reduction: {bg[2]}"
    attacks = []
    buttons = [get_recharge_button(), get_patch_button(), get_boost_engine_button(), get_boost_shields_button(),
               get_boost_weapons_button()]

    # Add Effect
    parent = com.me.add_effect(f"{ch.name} Effects", desc=desc, passive_effects=peff, attacks=attacks, buttons=buttons)

    return f'''embed -title "testing" -f "{ch.name}|{parent}" '''


def get_boost_engine_button():
    return {"gvar_label": "Boost Engines", "verb": "uses Boost Engines!", "style": 1,
            "automation": ship.get_boost_engine_automation()}


def get_boost_shields_button():
    return {"gvar_label": "Boost Shields", "verb": "uses Boost Shields!", "style": 1,
            "automation": ship.get_boost_shield_automation()}


def get_boost_weapons_button():
    return {"gvar_label": "Boost Weapons", "verb": "uses Boost Weapons!", "style": 1,
            "automation": ship.get_boost_weapons_automation()}


def get_recharge_button():
    return {"gvar_label": "Recharge Shields", "verb": "recharges their shields!", "style": 3,
            "automation": ship.get_recharge_automation()}

def get_patch_button():
    return {"gvar_label": "Patch", "verb": "patches their hull!", "style": 3, "automation": ship.get_patch_automation()}

