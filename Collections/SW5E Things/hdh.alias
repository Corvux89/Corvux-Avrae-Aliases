<drac2>
com = combat()
ch = character()
a = argparse(&ARGS&)
num = int("&1&") if "&1&" in &ARGS& and "&1&".isdecimal() else 1
b = a.last('b') if a.last('b') else None
mi = a.last('mi')
i = '-i' in &ARGS&
targets = a.get('t')
con = 'con' in &ARGS&
footer = []

try:
    d_size = str([c.name for c in ch.consumables if  'Hit Dice' in c.name][0]).replace('Hit Dice (','').replace(')','')
except:
    return err(f"Hit die doesn't look to be setup. Please run `!level` first or set up the die")

base = f'''embed -thumb {image} -color {color}'''
cc = f"Hit Dice ({d_size})"

v = (ch.cc_exists(cc) and ch.get_cc(cc)>=num) or i

if v:
    if ch.get_cc(cc)<num and not i:
        base += f''' -title "{name} doesn't have enough hit die remaining for this." '''
        base += f''' -f "Hit Die Remaining|{ch.get_cc(cc)}" '''
        return base

    roll_str = f"-{num}{d_size}{f'mi{mi}' if mi else ''} {f'-{b}' if b else ''} {f'-{constitutionMod}' if con else ''} [healing]"
    base += f''' -title "{name} uses {num} hit die!" '''

    if com:
        if targets:   
            coms  = [com.get_combatant(x) for x in targets] if com else []
            for t in coms:
                base += f''' -f "{t.name}|{t.damage(roll_str, overheal=False).damage}" '''
                footer.append(f"{t.name}: {t.hp_str()}")
        else:
            base += f''' -f "{name}|{com.me.damage(roll_str, overheal=False).damage}" '''
            footer.append(f"{name}: {com.me.hp_str()}")
    else:
        h = vroll(roll_str)
        ch.modify_hp(-h.total, overflow=False)
        base += f''' -f "{name}|**Damage**: {h}" '''
        footer.append(f"{name}: {ch.hp_str()}")



if not i:
    ch.mod_cc(cc, -num)
    base += f''' -f "{cc}|{ch.cc_str(cc)} (-{num})" '''
footer_str = "\n".join(footer)
base += f''' -footer "{footer_str}" '''
return base
</drac2>