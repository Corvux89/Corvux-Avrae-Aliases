embed <drac2>
gvar = load_json(get_gvar("e9fa4672-b75f-42a6-a32e-29e205ccb387"))
surgeRoll = vroll("1d100")
Combat = combat()
c = character()
chanceRoll = vroll("1d20")
args = &ARGS&
out = []
override = ""
lookup = ""

if args:
  override = args[0] in "overrideroll"
  lookup = args[0].isdigit()
  if lookup:
    lookup = int(args[0])
    surge = gvar[ceil(lookup/2)-1]
    out.append(f'-title "{name} wants to know what a a roll of {lookup} is."')
    out.append(f'-desc "{surge.desc}"')
    return " ".join(out)

surge = gvar[ceil(surgeRoll.total/2)-1]
TP = "Tech Points"
out.append(f'''-title "Unstable Engineering Surge{' | ' + chanceRoll if not override else ''}"''')
if chanceRoll.total > 1 and not override:
  out.append('-desc "No Unstable Engineering Surge"')
  return " ".join(out)
else:
  out.append(f'-desc "{surge.desc}"')

if surge.type == 'roll':
  Roll = vroll(surge.roll)
  out.append(f'-f "Roll|{Roll}"')
elif surge.type == 'health':
  Roll = vroll(surge.roll)
  c.modify_hp(Roll.total, overflow=False)
  out.append(f'-f "HP Gained|{Roll.total}\n{c.hp_str}"')
elif surge.type == 'ccint':
  c.mod_cc(TP, max(intelligenceMod, 1))
  out.append(f'-f "{TP} ({max(intelligenceMod, 1)})|{c.cc_str(TP)}"')
elif surge.type == "cc":
  cmod_cc(TP, max((c.get_cc_max(TP)-c.get_cc(TP))//2, 0))
  out.append(f'-f "{TP} ({max((c.get_cc_max(TP)-c.get_cc(TP))//2, 0)})|{c.cc_str(TP)}"')
elif surge.type == "effect":
  if Combat:
    Combat.me.add_effect(surge.effect[0], duration=surge.effect[1], desc=surge.effect[2])
  out.append(f'-f "Gained Effect|Name: {surge.effect[0]}\nDuration: {surge.effect[1]} rounds"')

return " ".join(out)
</drac2>
-color <color>
-thumb <image>

-footer "{{ctx.prefix}}{{ctx.alias}} surge - Roll for chance | {{ctx.prefix}}{{ctx.alias}} surge [override|roll] - Force a roll | {{ctx.prefix}}{{ctx.alias}} surge [#] - Lookup a roll"