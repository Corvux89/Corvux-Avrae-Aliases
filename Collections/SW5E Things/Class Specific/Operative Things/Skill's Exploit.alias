<drac2>
c = character()
com = combat()
a = argparse(&ARGS&)
gvar = load_json(get_gvar("4573b73e-b1cf-43b6-a9bf-833e54300781"))
fail = 'fail' in &ARGS&
adv = 'adv' in &ARGS&
dis = 'dis' in &ARGS&
tadv = 'tadv' in &ARGS&
tdis = 'tdis' in &ARGS&
target = a.last('t')
cc="Skill's Exploit"
i = '-i' in &ARGS&
v = c.cc_exists(cc) or i

base = f'''embed -thumb {image} -color {color}'''

if not &ARGS& or &ARGS&[0] == "":
    return err("Which skill are you exploiting?")

if v:
    if not c.get_cc(cc) and not i:
        base += f''' -title "{name} needs to take a rest to replenish their {cc}!" '''
        return base

    exploit = None
    for g in gvar:
        if &ARGS&[0].lower() == g.name.lower():
            exploit=g
            break

    if exploit is None or exploit == "":
        return err(f"`{&ARGS&[0]}` is not a found/supported skill's exploit")

    for (n, s) in character().skills:
        if n.lower() == exploit.check.lower():
            skill = s
            sname = n
            break

    if skill.adv or adv:
        roll_str = f"2d20kh1 + {skill.value}"
    elif dis:
        roll_str = f"2d20kl1 + {skill.value}"
    else:
        roll_str = f"1d20 + {skill.value}"

    check = vroll(roll_str)

    base += f''' -f "Meta|**{sname.title()} Check DC:** {check}\n" '''

    if com:
        if target:
            try:
                combatant = com.get_combatant(target)
            except:
                return err("Invalid Target")

            if exploit.get('versus'):
                eSkill = None
                eName = None
                for (n, s) in combatant.skills:
                    if n.lower() in [x.lower() for x in exploit.versus]:
                        if not eSkill or s.value > eSkill.value:
                            eSkill = s
                            eName = n

            eCheck = vroll(f"{'2d20kh1' if tadv else '2d20kl1' if tdis else '1d20'} + {eSkill.value}")
            eName = 'piloting' if eName.lower() == 'religion' else 'technology' if eName.lower() == 'arcana' else 'lore' if eName.lower() == 'history' else eName

            if eCheck.total < check.total or fail:
                effect = exploit.effect
                if effect.get('desc') is not None:
                    if effect.parent:
                        peff = com.me.add_effect(exploit.name,duration=effect.get('duration'),end=True if effect.get('end') else False)
                        eff = combatant.add_effect(exploit.name, parent=peff, desc=effect.desc)
                    else:
                        eff=combatant.add_effect(exploit.name, duration=effect.get('duration'), desc=effect.desc, end=True if effect.get('end') else False)
                    f_str = f" {eCheck}; *Failure!*\n**Effect:** {eff}"
                else:
                    f_str = f"{eCheck}; *Failure!*"
            else:
                f_str = f"{eCheck}; **Success!**"

            base += f''' -f "{combatant.name} ({eName})|{f_str}" '''
    else:
        if target:
            base += f''' -f "{target}|**Check to make:** {exploit.versus}" '''

    base += f''' -title "{name} uses a {cc} to {exploit.name} ({sname.title()})!" '''
    base += f''' -f "Effect|{exploit.desc}" '''

if not c.cc_exists(cc):
    base += f''' -title "{name} has no custom counter {cc}!" '''

if not i:
    c.mod_cc(cc, -1)
    base += f''' -f "{cc}|{c.cc_str(cc)} (-1)" '''

return base
</drac2>