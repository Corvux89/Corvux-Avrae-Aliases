<drac2>
args = argparse(&ARGS&)
c = character()
com = combat()
cc = 'Force Points'
targ = args.last('t')
lvl = max(int(get("SentinellightLevel",0)), int(get("SentineldarkLevel",0)),0)
roll_str = '1d4' if level < 5 else '1d6' if level < 9 else '1d8' if level < 13 else '1d10'
i = '-i' in &ARGS&
dtype = "Kinetic" if not args.last('type') else args.last('type')
v = c.cc_exists(cc) or i
crit = 'crit' in &ARGS&

if lvl == 0:
    err(f"You're not a Sentinel.....try again")

base = f'''embed -thumb {image} -color {color}'''

if v:
    if not c.get_cc(cc) and not i:
        base += f''' -title "{name} needs to take a rest to replenish their {cc}!" '''
        return base

    base += f''' -title "{name} uses {get('their', 'their')} double strike!" '''

    roll_str += f"[{dtype}]"

    if com and targ:
        try:
            t = com.get_combatant(targ)
        except:
            err(f"Invalid target")

        base += f''' -f "{t.name}|{t.damage(roll_str, crit).damage}" '''
        base += f''' -footer "{t.name}:{t.hp_str()}" '''
    else:
        if crit:
            crit = 2
        else:
            crit = 1

        base += f''' -f "Meta|**Damage**: {vroll(roll_str, crit)}" '''


    base += f''' -f "Effect|When you hit a creature with a weapon attack, you can roll a Kinetic Combat die and deal additional damage of the same type equal to the amount rolled." '''

if not c.cc_exists(cc):
    base += f''' -title "{name} has no custom counter {cc}!" '''
elif not c.get_cc(cc):
    base += f''' -title "{name} needs to take a rest to replenish their {cc}!" '''

if not i:
    c.mod_cc(cc, -1)
    base += f''' -f "{cc}|{c.cc_str(cc)} (-{1})" '''

return base
</drac2>