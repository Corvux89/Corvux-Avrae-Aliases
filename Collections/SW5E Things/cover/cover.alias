<drac2>
c = character()
com = combat()
a = argparse(&ARGS&)
targ = a.last('t')
cover = &ARGS&[0]
dur = 1

if not cover:
    err(f"Specify the type of cover")

base = f'''embed -thumb {image} -color {color}'''

if cover.lower() in ['quart', '1/4']:
    effect="One-Quarter Cover"
    desc="A target with one-quarter cover has a +2 bonus to AC and Dexterity saving throws. A target has one-quarter cover if an obstacle blocks at least one-fourth of its body, such as a thin pillar or a creature of one size category smaller."
    peffect={
        "ac_bonus": 2
    }
elif cover.lower() in ['half', '1/2']:
    effect="Half Cover"
    desc="A target with half cover has a +3 bonus to AC and Dexterity saving throws. A target has half cover if an obstacle blocks at least half of its body, such as a low wall or a creature of the same size category."
    peffect={
        "ac_bonus": 3
    }
elif cover.lower() in ['three', '3', '3/4']:
    effect="Three-Quarter Cover"
    desc="A target with three-quarters cover has a +5 bonus to AC and Dexterity saving throws. A target has three-quarter cover if about three-quarters of it is obstructed, whether by an obstacle or a creature of one size category larger."
    peffect={
        "ac_bonus": 5
    }
elif cover.lower() in ['total', 'complete', 'full']:
    effect="Full Cover"
    desc="A target with total cover canâ€™t be targeted directly by an attack or a power, although some powers can reach such a target by including it in an area of effect. A target has total cover if it is completely concealed by an obstacle."
    peffect={}
elif cover.lower() in ['none', 'clear']:
    effect = None
else:
    err(f"{cover} is not a valid option")

if com:
    if targ:
        try:
            t = com.get_combatant(targ)
        except:
            err(f"Invalid Target")
    else:
        t = com.me

    if effect:
        t.add_effect(effect, duration=dur, desc=desc, passive_effects=peffect)
        base += f''' -title "{t.name} takes {effect}" '''
    else:
        t.remove_effect("Cover")
        base += f''' -title "{t.name} is revealed!" '''
else:
    if effect:
        base += f''' -title "{name} takes {effect}" '''
    else:
        base += f''' -title "{name} is revealed!" '''

if effect:
    base += f''' -desc "{desc}" '''
    base += f''' -f "Effect|{effect} [1 round]" '''
else:
    base += f''' -f "Effect|Cover removed" '''

return base

</drac2>