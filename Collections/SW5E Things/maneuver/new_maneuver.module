def maneuver(args):
    tags = ["name","superiorityDice", "mod", "dice", "diceTotal", "dmgType", "uses", "desc", "thp", "dc", "combatantFooter", "damageText"]
    c = character()
    com = combat()
    a = argparse(args)
    i = '-i' in args
    hlp = not args or ('?' in args or 'help' in args)
    fail = 'fail' in args
    tadv = 'tadv' in args
    tdis = 'tdis' in args
    crit = 'crit' in args
    lvl = get_level()
    superiorityDice = '1d4' if lvl < 5 else '1d6' if lvl < 9 else '1d8' if lvl < 16 else '1d12'
    feature = get_maneuver(args)
    type = a.last('type') if a.last('type') else feature.sub
    mod = get_mod(type)
    dc = a.last('dc') if a.last('dc') else f"8 + {c.stats.prof_bonus} + {mod}"
    cc = "Superiority Dice"
    ccNum = 0 if i else feature.ccnum if feature and "ccnum" in feature else -1
    cc_valid = c.get_cc(cc)
    dmgType = a.last("dtype") if a.last("dtype") else feature.dmgType if "dmgType" in feature else "none"
    mi = a.last('mi')

    v = lvl>=0 and cc_valid
    ccNum = ccNum if v else 0
    c.mod_cc(cc,ccNum) if v else ""

    # Straight Superiority Dice Rolls
    dice = vroll(feature.roll.replace('#superiorityDice#', superiorityDice)
                 + (f'mi{mi}' if mi else "")
                 + (f'+{a.join("d", "+")}' if a.get("d") else "")) if feature and "roll" in feature and feature.dice else ""

    diceTotal = dice.total if dice else 0

    targets = []


    return err(f"Here")


def get_maneuver(args):
    gvar = load_json(get_gvar("9b5b0cde-2e3c-4a8a-a662-eb843f6e85a8"))
    hlp = not args or ('?' in args or 'help' in args)

    maneuver = [x for x in gvar if not hlp and args[0] in x.name.lower()+(x.syn.lower() if "syn" in x else "")]

    if len(maneuver) == 0:
        return err("Maneuver not found.")

    return maneuver[0]

def get_level():
    c = character()
    lvl = 0

    if load_json(c.get_cvar("subclass","{}")).get("BerserkerLevel","") == "Champion":
        lvl = max(int(c.levels.get("Berserker", 0)), lvl)

    if load_json(c.get_cvar("subclass", "{}")).get("ScoutLevel", "") == "Deadeye":
        lvl = max(int(c.levels.get("Scout", 0)),lvl)

    lvl = max(int(c.levels.get("Fighter",0)), int(c.levels.get("Scholar",0)), lvl)

    return lvl

def get_mod(type):
    s = character().stats

    if type == "Mental":
        return max(s.get_mod("wisdom"), s.get_mod("intelligence"), s.get_mod("charisma"), 0)
    elif type == "Physical":
        return max(s.get_mod("strength"), s.get_mod("dexterity"), s.get_mod("constitution"), 0)
    else:
        return max(get_mod("Metal"), get_mod("Physical"))
