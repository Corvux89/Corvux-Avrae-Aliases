<drac2>
# Arguments
using(s='2ef273f3-efd8-4feb-bbe9-692f592a3bd0')
args = &ARGS&
a = argparse(args)

# Initial Validation
if not combat():
    return err("Channel must be in combat for this collection to work.")

if not args:
    return f"help {ctx.alias} -here"

if shop := s.get_shop():
    if not s.is_manager():
        output = f'''-title "Shopping Disaster" -desc "You're a shopper not a manager/owner."'''
        return s.build_embed(output)
    elif item := s.get_item(args[0]):
        output = f''' -title "Shopping Disaster" -desc "Item is already in the shop's inventory"'''
        return s.build_embed(output)

    try:
        items = load_json(get_gvar(args[0]))

        for item_name, item_data in items.items():
            if item := s.get_item(item_name):
                item['quantity'] = int(item.get('quantity',0) or 0) + int(item_data.get('quantity',0) or 0) if item_data.get('override', False) == False else int(item_data.get('quantity', 0) or 0)
                item['price'] = item_data.get('price', item.get('price'))
                item['currency'] = item_data.get('currency', item.get('currency'))
                item['category'] = item_data.get('category', item.get('category'))
                item['image_url'] = item_data.get('image_url', item.get('image_url'))
                item['margin'] = item_data.get('margin', item.get('margin'))
            else:
                item = s.get_item(item_name,
                                    True,
                                    quantity=item_data.get('quantity', 0),
                                    price=item_data.get('price', 1),
                                    currency=item_data.get('currency', 'gp'),
                                    category=item_data.get('category'),
                                    image_url=item_data.get('image_url'),
                                    margin=item_data.get('margin'))
            success, item = s.modify_inventory(item)

        output = (f'''-title "Inventory Bulk Updated!" ''')
        return s.build_embed(output)
    except:
        pass
    
    item = s.get_item(args[0],
                      True,
                      quantity=a.last('qty', 1, type_=int),
                      price=a.last('p', 1, type_=int),
                      currency=a.last('c', 'gp', type_=str),
                      category=a.last('cat', type_=str),
                      image_url=a.last('image_url', type_=str),
                      margin=a.last('margin', type_=float)
                    )

    
    success, item = s.modify_inventory(item)

    if not success:
        output = f'''-title "Shopping Disaster" -desc "{item}"'''
        return s.build_embed(output)

    output = (f'''-title "{item.get('name')} added to {shop.get('name')}" 
                  -desc "
                  **Category**: {item.get('category','')}
                  **Quantity**: {item.get('quantity'):,}
                  **Price**: {item.get('price'):,} {item.get('currency')}
                  **Margin**: {item.get('margin', "*Shop Default*")}" -thumb "{item.get('image_url')}"''')    

else:
    output = f'''-title "Shopping Disaster" -desc "A shop doesn't exist in this channel yet. Please use `{ctx.prefix}{ctx.alias} create` first."'''

return s.build_embed(output)
</drac2>